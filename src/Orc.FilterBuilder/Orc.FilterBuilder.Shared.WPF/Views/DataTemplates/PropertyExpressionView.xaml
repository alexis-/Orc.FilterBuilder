<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:catel="http://catel.codeplex.com"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:mahAppsControls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:expressionsViewModels="clr-namespace:Orc.FilterBuilder"
                    xmlns:converters="clr-namespace:Orc.FilterBuilder.Converters">

    <HierarchicalDataTemplate DataType="{x:Type expressionsViewModels:PropertyExpression}"
                              ItemsSource="{Binding Items}">

        <HierarchicalDataTemplate.Resources>
            <catel:ObjectToDisplayNameConverter x:Key="ObjectToDisplayNameConverter" />
            <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
            <converters:ValueControlTypeVisibilityConverter x:Key="ValueControlTypeVisibilityConverter" />
            <converters:DataTypeExpressionToConditionsConverter x:Key="DataTypeExpressionToConditionsConverter" />

            <Geometry x:Key="DeleteGeometry">
                M453.423,396.115L676.033,618.725L618.721,676.037L396.111,453.427L173.501,676.037L116.188,618.725L338.798,396.115L116.188,173.505L173.501,116.193L396.111,338.803L618.721,116.193L676.033,173.505L453.423,396.115Z
            </Geometry>

            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Width" Value="110" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="16 0 0 0" />
            </Style>

            <Style TargetType="DatePicker" BasedOn="{StaticResource {x:Type DatePicker}}">
                <Setter Property="Width" Value="110" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="16 0 0 0" />
            </Style>

        </HierarchicalDataTemplate.Resources>

        <Border BorderBrush="{DynamicResource FilterBuilderGrayBrush9}"
                BorderThickness="0 1 1 1">

            <StackPanel Name="PropertyPanel"
                        Orientation="Horizontal"
                        Height="50">

                <!--Property-->
                <ComboBox ItemsSource="{Binding DataContext.TargetProperties, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                          DisplayMemberPath="DisplayName"
                          SelectedItem="{Binding Property, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                          Style="{DynamicResource FilterBuilderComboBoxStyle}"
                          VerticalAlignment="Center"
                          Margin="16 0 0 0"
                          Width="120" />

                <!--Comparison operator-->
                <ComboBox ItemsSource="{Binding DataTypeExpression, Converter={converters:DataTypeExpressionToConditionsConverter}}"
                          SelectedItem="{Binding DataTypeExpression.SelectedCondition}"
                          Style="{DynamicResource FilterBuilderComboBoxStyle}"
                          VerticalAlignment="Center"
                          Margin="16 0 0 0"
                          Width="110">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource ObjectToDisplayNameConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <!--Value types-->
                <Grid Visibility="{Binding DataTypeExpression.IsValueRequired, Converter={StaticResource VisibilityConverter}}"
                      Margin="0">
                    <TextBox Text="{Binding DataTypeExpression.Value}"
                             Visibility="{Binding DataTypeExpression.ValueControlType, Converter={StaticResource ValueControlTypeVisibilityConverter}, ConverterParameter={x:Static expressionsViewModels:ValueControlType.Text}}">
                        <i:Interaction.Behaviors>
                            <catel:UpdateBindingOnTextChanged UpdateDelay="500" />
                            <!--<catel:AutoCompletion PropertyName="{Binding Property.Name, Mode=OneWay}" ItemsSource="{Binding DataContext.RawCollection, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" 
                                                              IsEnabled="{Binding DataContext.EnableAutoCompletion, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"/>-->
                        </i:Interaction.Behaviors>
                    </TextBox>

                    <TextBox Text="{Binding DataTypeExpression.Value}">
                        <TextBox.Visibility>
                            <Binding Path="DataTypeExpression.ValueControlType"
                                     Converter="{StaticResource ValueControlTypeVisibilityConverter}">
                                <Binding.ConverterParameter>
                                    <x:Array Type="{x:Type expressionsViewModels:ValueControlType}">
                                        <expressionsViewModels:ValueControlType>Byte</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>SByte</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>Short</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>UnsignedShort</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>Integer</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>UnsignedInteger</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>Long</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>UnsignedLong</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>Decimal</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>Float</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>Double</expressionsViewModels:ValueControlType>
                                        <expressionsViewModels:ValueControlType>Numeric</expressionsViewModels:ValueControlType>
                                    </x:Array>
                                </Binding.ConverterParameter>
                            </Binding>
                        </TextBox.Visibility>
                        <i:Interaction.Behaviors>
                            <catel:NumericTextBox IsDecimalAllowed="{Binding DataTypeExpression.IsDecimal}"
                                                  IsNegativeAllowed="{Binding DataTypeExpression.IsSigned}"
                                                  UpdateBindingOnTextChanged="False" />
                            <catel:UpdateBindingOnTextChanged UpdateDelay="500" />
                        </i:Interaction.Behaviors>
                    </TextBox>

                    <DatePicker SelectedDate="{Binding DataTypeExpression.Value}"
                                Visibility="{Binding DataTypeExpression.ValueControlType, Converter={StaticResource ValueControlTypeVisibilityConverter}, ConverterParameter={x:Static expressionsViewModels:ValueControlType.DateTime}}" />

                    <ComboBox ItemsSource="{Binding DataTypeExpression.BooleanValues}"
                              SelectedValue="{Binding DataTypeExpression.Value}"
                              Visibility="{Binding DataTypeExpression.ValueControlType, Converter={StaticResource ValueControlTypeVisibilityConverter}, ConverterParameter={x:Static expressionsViewModels:ValueControlType.Boolean}}"
                              Style="{DynamicResource FilterBuilderComboBoxStyle}"
                              VerticalAlignment="Center"
                              Margin="16 0 0 0"
                              Width="110" />

                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding DataTypeExpression.ValueControlType, Converter={StaticResource ValueControlTypeVisibilityConverter}, ConverterParameter={x:Static expressionsViewModels:ValueControlType.TimeSpan}}">
                        <ComboBox ItemsSource="{Binding DataTypeExpression.SpanTypes}"
                                  SelectedValue="{Binding DataTypeExpression.SelectedSpanType}"
                                  Style="{DynamicResource FilterBuilderComboBoxStyle}"
                                  VerticalAlignment="Center"
                                  Margin="16 0 0 0"
                                  Width="110" />
                        <TextBox Text="{Binding DataTypeExpression.Amount}">
                            <i:Interaction.Behaviors>
                                <catel:NumericTextBox IsDecimalAllowed="False"
                                                      IsNegativeAllowed="False"
                                                      UpdateBindingOnTextChanged="False" />

                                <catel:UpdateBindingOnTextChanged UpdateDelay="500" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>
                </Grid>

                <!--<Rectangle Style="{DynamicResource HorizontalSeparator}"
                 Margin="32 0 0 0" />-->

                <Button Content="{catel:LanguageBinding FilterBuilder_And}"
                        Height="28"
                        Width="36"
                        BorderThickness=".6 .6 .3 .6"
                        Focusable="False"
                        Command="{Binding DataContext.AddAndConditionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                        CommandParameter="{Binding}"
                        Style="{DynamicResource FilterBuilderButtonStyle}"
                        Margin="48 0 0 0" />
                <Button Content="{catel:LanguageBinding FilterBuilder_Or}"
                        Height="28"
                        Width="36"
                        BorderThickness=".6 .6 .3 .6"
                        Margin="0 0 16 0"
                        Focusable="False"
                        Style="{DynamicResource FilterBuilderButtonStyle}"
                        Command="{Binding DataContext.AddOrConditionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                        CommandParameter="{Binding}" />

                <Button ToolTip="{catel:LanguageBinding FilterBuilder_DeleteItem}"
                        Content="{StaticResource DeleteGeometry}"
                        Padding="3"
                        Margin="0 0 16 0"
                        Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                        CommandParameter="{Binding}"
                        Style="{DynamicResource FilterBuilderIconButtonStyle}"
                        Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={catel:BooleanToCollapsingVisibilityConverter}}" />


                <StackPanel.Background>
                    <SolidColorBrush x:Name="StackPanelBackgroundColor" Color="{DynamicResource FilterBuilderWhite}"/>
                </StackPanel.Background>

                <StackPanel.Triggers>
                    <EventTrigger RoutedEvent="Grid.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.15"
                                                    Storyboard.TargetName="StackPanelBackgroundColor"
                                                    Storyboard.TargetProperty="Color"
                                                    To="{DynamicResource FilterBuilderGray10}" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Grid.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.15"
                                                    Storyboard.TargetName="StackPanelBackgroundColor"
                                                    Storyboard.TargetProperty="Color"
                                                    To="{DynamicResource FilterBuilderWhite}" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </StackPanel.Triggers>
            </StackPanel>

        </Border>

    </HierarchicalDataTemplate>

</ResourceDictionary>